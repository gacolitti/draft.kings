% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dk_multi_get.R
\name{multi_req_perform2}
\alias{multi_req_perform2}
\title{Perform multiple requests in parallel}
\usage{
multi_req_perform2(
  reqs,
  max_tries = 1,
  retry_sleep = 3,
  is_transient = NULL,
  paths = NULL,
  verbose = FALSE,
  ...
)
}
\arguments{
\item{reqs}{A list of \link[httr2]{request}s.}

\item{max_tries}{Maximum number of retry attempts for responses that are flagged as
transient with the \code{is_transient} function. By default, will retry 1 time.}

\item{retry_sleep}{A numeric value indicating the number of seconds to sleep
after performing the requests. If NULL or negative, no sleep is performed.}

\item{is_transient}{A predicate function that takes a single argument (the response) and
returns TRUE or FALSE specifying whether or not the response represents a transient error.
By default, requests with a 429, 503, or 403 status code are treated as transient,
as well as requests that completely failed and returned no status code.}

\item{paths}{An optional list of paths, if you want to download the request
bodies to disks. If supplied, must be the same length as \code{reqs}.}

\item{verbose}{Should messages related to retry logic be reported?}

\item{...}{Other arguments passed to \code{\link[httr2:multi_req_perform]{httr2::multi_req_perform()}}}
}
\value{
A list of responses from \code{\link[httr2:multi_req_perform]{httr2::multi_req_perform()}}.
}
\description{
\code{multi_req_perform2} performs multiple HTTP requests concurrently
and optionally retries failed attempts.
}
\details{
This function is a wrapper around \code{\link[httr2:multi_req_perform]{httr2::multi_req_perform()}} that allows for
the introduction of retry logic if some requests meet user-defined criteria.
This can be useful for sending many requests that are likely to encounter transient
errors that can be resolved with additional attempts.
}
\examples{
\dontrun{
req_list <- list(
  httr2::request("http://httpbin.org/get"),
  httr2::request("http://httpbin.org/get")
)
responses <- multi_req_perform2(req_list, retry_sleep = 2)
}

}
\keyword{internal}
